// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: proto/command.proto

package auctioncmd

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// ********************* Player profile commands *********************
type PlayerType int32

const (
	PlayerType_NONE                PlayerType = 0
	PlayerType_RIGHT_HANDED_BAT    PlayerType = 1
	PlayerType_LEFT_HANDED_BAT     PlayerType = 2
	PlayerType_RIGHT_ARM_BOWL      PlayerType = 3
	PlayerType_LEFT_ARM_BOWL       PlayerType = 4
	PlayerType_BATTING_ALL_ROUNDER PlayerType = 5
	PlayerType_BOWLING_ALL_ROUNDER PlayerType = 6
)

// Enum value maps for PlayerType.
var (
	PlayerType_name = map[int32]string{
		0: "NONE",
		1: "RIGHT_HANDED_BAT",
		2: "LEFT_HANDED_BAT",
		3: "RIGHT_ARM_BOWL",
		4: "LEFT_ARM_BOWL",
		5: "BATTING_ALL_ROUNDER",
		6: "BOWLING_ALL_ROUNDER",
	}
	PlayerType_value = map[string]int32{
		"NONE":                0,
		"RIGHT_HANDED_BAT":    1,
		"LEFT_HANDED_BAT":     2,
		"RIGHT_ARM_BOWL":      3,
		"LEFT_ARM_BOWL":       4,
		"BATTING_ALL_ROUNDER": 5,
		"BOWLING_ALL_ROUNDER": 6,
	}
)

func (x PlayerType) Enum() *PlayerType {
	p := new(PlayerType)
	*p = x
	return p
}

func (x PlayerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_command_proto_enumTypes[0].Descriptor()
}

func (PlayerType) Type() protoreflect.EnumType {
	return &file_proto_command_proto_enumTypes[0]
}

func (x PlayerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerType.Descriptor instead.
func (PlayerType) EnumDescriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{0}
}

type ParticipantRole int32

const (
	ParticipantRole_VIEWER              ParticipantRole = 0
	ParticipantRole_PLAYER_UNDER_HAMMER ParticipantRole = 1
	ParticipantRole_CAPTAIN             ParticipantRole = 2
	ParticipantRole_AUCTIONEER          ParticipantRole = 3
	ParticipantRole_AUCTIONEER_PLAYER   ParticipantRole = 4
)

// Enum value maps for ParticipantRole.
var (
	ParticipantRole_name = map[int32]string{
		0: "VIEWER",
		1: "PLAYER_UNDER_HAMMER",
		2: "CAPTAIN",
		3: "AUCTIONEER",
		4: "AUCTIONEER_PLAYER",
	}
	ParticipantRole_value = map[string]int32{
		"VIEWER":              0,
		"PLAYER_UNDER_HAMMER": 1,
		"CAPTAIN":             2,
		"AUCTIONEER":          3,
		"AUCTIONEER_PLAYER":   4,
	}
)

func (x ParticipantRole) Enum() *ParticipantRole {
	p := new(ParticipantRole)
	*p = x
	return p
}

func (x ParticipantRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParticipantRole) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_command_proto_enumTypes[1].Descriptor()
}

func (ParticipantRole) Type() protoreflect.EnumType {
	return &file_proto_command_proto_enumTypes[1]
}

func (x ParticipantRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParticipantRole.Descriptor instead.
func (ParticipantRole) EnumDescriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{1}
}

type AuctionRequest_RequestType int32

const (
	AuctionRequest_NONE                             AuctionRequest_RequestType = 0
	AuctionRequest_FETCH_PLAYER_INFO_BY_USER_UUID   AuctionRequest_RequestType = 1
	AuctionRequest_FETCH_PLAYER_INFO_BY_PLAYER_UUID AuctionRequest_RequestType = 2
	AuctionRequest_UPDATE_PLAYER_INFO               AuctionRequest_RequestType = 3
	AuctionRequest_CREATE_AUCTION_BOARD             AuctionRequest_RequestType = 4
	AuctionRequest_UPDATE_AUCTION_BOARD             AuctionRequest_RequestType = 5
	AuctionRequest_DELETE_AUCTION_BOARD             AuctionRequest_RequestType = 6
	AuctionRequest_FETCH_AUCTION_BOARD_INFO         AuctionRequest_RequestType = 7
	AuctionRequest_JOIN_AUCTION                     AuctionRequest_RequestType = 8
	AuctionRequest_CHANGE_PARTICIPANT_ROLE          AuctionRequest_RequestType = 9
	AuctionRequest_FETCH_PARTICIPANT_LIST           AuctionRequest_RequestType = 10
)

// Enum value maps for AuctionRequest_RequestType.
var (
	AuctionRequest_RequestType_name = map[int32]string{
		0:  "NONE",
		1:  "FETCH_PLAYER_INFO_BY_USER_UUID",
		2:  "FETCH_PLAYER_INFO_BY_PLAYER_UUID",
		3:  "UPDATE_PLAYER_INFO",
		4:  "CREATE_AUCTION_BOARD",
		5:  "UPDATE_AUCTION_BOARD",
		6:  "DELETE_AUCTION_BOARD",
		7:  "FETCH_AUCTION_BOARD_INFO",
		8:  "JOIN_AUCTION",
		9:  "CHANGE_PARTICIPANT_ROLE",
		10: "FETCH_PARTICIPANT_LIST",
	}
	AuctionRequest_RequestType_value = map[string]int32{
		"NONE":                             0,
		"FETCH_PLAYER_INFO_BY_USER_UUID":   1,
		"FETCH_PLAYER_INFO_BY_PLAYER_UUID": 2,
		"UPDATE_PLAYER_INFO":               3,
		"CREATE_AUCTION_BOARD":             4,
		"UPDATE_AUCTION_BOARD":             5,
		"DELETE_AUCTION_BOARD":             6,
		"FETCH_AUCTION_BOARD_INFO":         7,
		"JOIN_AUCTION":                     8,
		"CHANGE_PARTICIPANT_ROLE":          9,
		"FETCH_PARTICIPANT_LIST":           10,
	}
)

func (x AuctionRequest_RequestType) Enum() *AuctionRequest_RequestType {
	p := new(AuctionRequest_RequestType)
	*p = x
	return p
}

func (x AuctionRequest_RequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuctionRequest_RequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_command_proto_enumTypes[2].Descriptor()
}

func (AuctionRequest_RequestType) Type() protoreflect.EnumType {
	return &file_proto_command_proto_enumTypes[2]
}

func (x AuctionRequest_RequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuctionRequest_RequestType.Descriptor instead.
func (AuctionRequest_RequestType) EnumDescriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{0, 0}
}

type AuctionResponse_ResponseType int32

const (
	AuctionResponse_ERROR                   AuctionResponse_ResponseType = 0
	AuctionResponse_FETCH_PLAYER_INFO       AuctionResponse_ResponseType = 1
	AuctionResponse_UPDATE_PLAYER_INFO      AuctionResponse_ResponseType = 2
	AuctionResponse_CREATE_AUCTION_BOARD    AuctionResponse_ResponseType = 3
	AuctionResponse_UPDATE_AUCTION_BOARD    AuctionResponse_ResponseType = 4
	AuctionResponse_DELETE_AUCTION_BOARD    AuctionResponse_ResponseType = 5
	AuctionResponse_FETCH_AUCTION_BOARD     AuctionResponse_ResponseType = 6
	AuctionResponse_JOIN_AUCTION            AuctionResponse_ResponseType = 7
	AuctionResponse_CHANGE_PARTICIPANT_ROLE AuctionResponse_ResponseType = 8
	AuctionResponse_FETCH_PARTICIPANT_LIST  AuctionResponse_ResponseType = 9
)

// Enum value maps for AuctionResponse_ResponseType.
var (
	AuctionResponse_ResponseType_name = map[int32]string{
		0: "ERROR",
		1: "FETCH_PLAYER_INFO",
		2: "UPDATE_PLAYER_INFO",
		3: "CREATE_AUCTION_BOARD",
		4: "UPDATE_AUCTION_BOARD",
		5: "DELETE_AUCTION_BOARD",
		6: "FETCH_AUCTION_BOARD",
		7: "JOIN_AUCTION",
		8: "CHANGE_PARTICIPANT_ROLE",
		9: "FETCH_PARTICIPANT_LIST",
	}
	AuctionResponse_ResponseType_value = map[string]int32{
		"ERROR":                   0,
		"FETCH_PLAYER_INFO":       1,
		"UPDATE_PLAYER_INFO":      2,
		"CREATE_AUCTION_BOARD":    3,
		"UPDATE_AUCTION_BOARD":    4,
		"DELETE_AUCTION_BOARD":    5,
		"FETCH_AUCTION_BOARD":     6,
		"JOIN_AUCTION":            7,
		"CHANGE_PARTICIPANT_ROLE": 8,
		"FETCH_PARTICIPANT_LIST":  9,
	}
)

func (x AuctionResponse_ResponseType) Enum() *AuctionResponse_ResponseType {
	p := new(AuctionResponse_ResponseType)
	*p = x
	return p
}

func (x AuctionResponse_ResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuctionResponse_ResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_command_proto_enumTypes[3].Descriptor()
}

func (AuctionResponse_ResponseType) Type() protoreflect.EnumType {
	return &file_proto_command_proto_enumTypes[3]
}

func (x AuctionResponse_ResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuctionResponse_ResponseType.Descriptor instead.
func (AuctionResponse_ResponseType) EnumDescriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{1, 0}
}

type AuctionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestType AuctionRequest_RequestType `protobuf:"varint,1,opt,name=request_type,json=requestType,proto3,enum=auctioncmd.AuctionRequest_RequestType" json:"request_type,omitempty"`
	// Types that are assignable to Request:
	//	*AuctionRequest_FetchPlayerInfoByUserUuidRequest
	//	*AuctionRequest_FetchPlayerInfoByPlayerUuidRequest
	//	*AuctionRequest_UpdatePlayerInfoRequest
	//	*AuctionRequest_CreateAuctionBoardRequest
	//	*AuctionRequest_UpdateAuctionBoardRequest
	//	*AuctionRequest_DeleteAuctionBoardRequest
	//	*AuctionRequest_FetchAuctionBoardRequest
	//	*AuctionRequest_JoinAuctionBoardRequest
	//	*AuctionRequest_ChangeParticipantRoleRequest
	//	*AuctionRequest_FetchParticipantListRequest
	Request isAuctionRequest_Request `protobuf_oneof:"request"`
}

func (x *AuctionRequest) Reset() {
	*x = AuctionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionRequest) ProtoMessage() {}

func (x *AuctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionRequest.ProtoReflect.Descriptor instead.
func (*AuctionRequest) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{0}
}

func (x *AuctionRequest) GetRequestType() AuctionRequest_RequestType {
	if x != nil {
		return x.RequestType
	}
	return AuctionRequest_NONE
}

func (m *AuctionRequest) GetRequest() isAuctionRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *AuctionRequest) GetFetchPlayerInfoByUserUuidRequest() *FetchPlayerInfoByUserUUIDRequest {
	if x, ok := x.GetRequest().(*AuctionRequest_FetchPlayerInfoByUserUuidRequest); ok {
		return x.FetchPlayerInfoByUserUuidRequest
	}
	return nil
}

func (x *AuctionRequest) GetFetchPlayerInfoByPlayerUuidRequest() *FetchPlayerInfoByPlayerUUIDRequest {
	if x, ok := x.GetRequest().(*AuctionRequest_FetchPlayerInfoByPlayerUuidRequest); ok {
		return x.FetchPlayerInfoByPlayerUuidRequest
	}
	return nil
}

func (x *AuctionRequest) GetUpdatePlayerInfoRequest() *UpdatePlayerInfoRequest {
	if x, ok := x.GetRequest().(*AuctionRequest_UpdatePlayerInfoRequest); ok {
		return x.UpdatePlayerInfoRequest
	}
	return nil
}

func (x *AuctionRequest) GetCreateAuctionBoardRequest() *CreateAuctionBoardRequest {
	if x, ok := x.GetRequest().(*AuctionRequest_CreateAuctionBoardRequest); ok {
		return x.CreateAuctionBoardRequest
	}
	return nil
}

func (x *AuctionRequest) GetUpdateAuctionBoardRequest() *UpdateAuctionBoardRequest {
	if x, ok := x.GetRequest().(*AuctionRequest_UpdateAuctionBoardRequest); ok {
		return x.UpdateAuctionBoardRequest
	}
	return nil
}

func (x *AuctionRequest) GetDeleteAuctionBoardRequest() *DeleteAuctionBoardRequest {
	if x, ok := x.GetRequest().(*AuctionRequest_DeleteAuctionBoardRequest); ok {
		return x.DeleteAuctionBoardRequest
	}
	return nil
}

func (x *AuctionRequest) GetFetchAuctionBoardRequest() *FetchAuctionBoardRequest {
	if x, ok := x.GetRequest().(*AuctionRequest_FetchAuctionBoardRequest); ok {
		return x.FetchAuctionBoardRequest
	}
	return nil
}

func (x *AuctionRequest) GetJoinAuctionBoardRequest() *JoinAuctionBoardRequest {
	if x, ok := x.GetRequest().(*AuctionRequest_JoinAuctionBoardRequest); ok {
		return x.JoinAuctionBoardRequest
	}
	return nil
}

func (x *AuctionRequest) GetChangeParticipantRoleRequest() *ChangeParticipantRoleRequest {
	if x, ok := x.GetRequest().(*AuctionRequest_ChangeParticipantRoleRequest); ok {
		return x.ChangeParticipantRoleRequest
	}
	return nil
}

func (x *AuctionRequest) GetFetchParticipantListRequest() *FetchParticipantListRequest {
	if x, ok := x.GetRequest().(*AuctionRequest_FetchParticipantListRequest); ok {
		return x.FetchParticipantListRequest
	}
	return nil
}

type isAuctionRequest_Request interface {
	isAuctionRequest_Request()
}

type AuctionRequest_FetchPlayerInfoByUserUuidRequest struct {
	FetchPlayerInfoByUserUuidRequest *FetchPlayerInfoByUserUUIDRequest `protobuf:"bytes,2,opt,name=fetch_player_info_by_user_uuid_request,json=fetchPlayerInfoByUserUuidRequest,proto3,oneof"`
}

type AuctionRequest_FetchPlayerInfoByPlayerUuidRequest struct {
	FetchPlayerInfoByPlayerUuidRequest *FetchPlayerInfoByPlayerUUIDRequest `protobuf:"bytes,3,opt,name=fetch_player_info_by_player_uuid_request,json=fetchPlayerInfoByPlayerUuidRequest,proto3,oneof"`
}

type AuctionRequest_UpdatePlayerInfoRequest struct {
	UpdatePlayerInfoRequest *UpdatePlayerInfoRequest `protobuf:"bytes,4,opt,name=update_player_info_request,json=updatePlayerInfoRequest,proto3,oneof"`
}

type AuctionRequest_CreateAuctionBoardRequest struct {
	CreateAuctionBoardRequest *CreateAuctionBoardRequest `protobuf:"bytes,5,opt,name=create_auction_board_request,json=createAuctionBoardRequest,proto3,oneof"`
}

type AuctionRequest_UpdateAuctionBoardRequest struct {
	UpdateAuctionBoardRequest *UpdateAuctionBoardRequest `protobuf:"bytes,6,opt,name=update_auction_board_request,json=updateAuctionBoardRequest,proto3,oneof"`
}

type AuctionRequest_DeleteAuctionBoardRequest struct {
	DeleteAuctionBoardRequest *DeleteAuctionBoardRequest `protobuf:"bytes,7,opt,name=delete_auction_board_request,json=deleteAuctionBoardRequest,proto3,oneof"`
}

type AuctionRequest_FetchAuctionBoardRequest struct {
	FetchAuctionBoardRequest *FetchAuctionBoardRequest `protobuf:"bytes,8,opt,name=fetch_auction_board_request,json=fetchAuctionBoardRequest,proto3,oneof"`
}

type AuctionRequest_JoinAuctionBoardRequest struct {
	JoinAuctionBoardRequest *JoinAuctionBoardRequest `protobuf:"bytes,9,opt,name=join_auction_board_request,json=joinAuctionBoardRequest,proto3,oneof"`
}

type AuctionRequest_ChangeParticipantRoleRequest struct {
	ChangeParticipantRoleRequest *ChangeParticipantRoleRequest `protobuf:"bytes,10,opt,name=change_participant_role_request,json=changeParticipantRoleRequest,proto3,oneof"`
}

type AuctionRequest_FetchParticipantListRequest struct {
	FetchParticipantListRequest *FetchParticipantListRequest `protobuf:"bytes,11,opt,name=fetch_participant_list_request,json=fetchParticipantListRequest,proto3,oneof"`
}

func (*AuctionRequest_FetchPlayerInfoByUserUuidRequest) isAuctionRequest_Request() {}

func (*AuctionRequest_FetchPlayerInfoByPlayerUuidRequest) isAuctionRequest_Request() {}

func (*AuctionRequest_UpdatePlayerInfoRequest) isAuctionRequest_Request() {}

func (*AuctionRequest_CreateAuctionBoardRequest) isAuctionRequest_Request() {}

func (*AuctionRequest_UpdateAuctionBoardRequest) isAuctionRequest_Request() {}

func (*AuctionRequest_DeleteAuctionBoardRequest) isAuctionRequest_Request() {}

func (*AuctionRequest_FetchAuctionBoardRequest) isAuctionRequest_Request() {}

func (*AuctionRequest_JoinAuctionBoardRequest) isAuctionRequest_Request() {}

func (*AuctionRequest_ChangeParticipantRoleRequest) isAuctionRequest_Request() {}

func (*AuctionRequest_FetchParticipantListRequest) isAuctionRequest_Request() {}

type AuctionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errormsg     string                       `protobuf:"bytes,1,opt,name=errormsg,proto3" json:"errormsg,omitempty"`
	ResponseType AuctionResponse_ResponseType `protobuf:"varint,2,opt,name=response_type,json=responseType,proto3,enum=auctioncmd.AuctionResponse_ResponseType" json:"response_type,omitempty"`
	// Types that are assignable to Response:
	//	*AuctionResponse_FetchPlayerInfoResponse
	//	*AuctionResponse_UpdatePlayerInfoResponse
	//	*AuctionResponse_CreateAuctionBoardResponse
	//	*AuctionResponse_UpdateAuctionBoardResponse
	//	*AuctionResponse_DeleteAuctionBoardResponse
	//	*AuctionResponse_FetchAuctionBoardResponse
	//	*AuctionResponse_JoinAuctionBoardResponse
	//	*AuctionResponse_ChangeParticipantRoleResponse
	//	*AuctionResponse_FetchParticipantListResponse
	Response isAuctionResponse_Response `protobuf_oneof:"response"`
}

func (x *AuctionResponse) Reset() {
	*x = AuctionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionResponse) ProtoMessage() {}

func (x *AuctionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionResponse.ProtoReflect.Descriptor instead.
func (*AuctionResponse) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{1}
}

func (x *AuctionResponse) GetErrormsg() string {
	if x != nil {
		return x.Errormsg
	}
	return ""
}

func (x *AuctionResponse) GetResponseType() AuctionResponse_ResponseType {
	if x != nil {
		return x.ResponseType
	}
	return AuctionResponse_ERROR
}

func (m *AuctionResponse) GetResponse() isAuctionResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *AuctionResponse) GetFetchPlayerInfoResponse() *FetchPlayerInfoResponse {
	if x, ok := x.GetResponse().(*AuctionResponse_FetchPlayerInfoResponse); ok {
		return x.FetchPlayerInfoResponse
	}
	return nil
}

func (x *AuctionResponse) GetUpdatePlayerInfoResponse() *UpdatePlayerInfoResponse {
	if x, ok := x.GetResponse().(*AuctionResponse_UpdatePlayerInfoResponse); ok {
		return x.UpdatePlayerInfoResponse
	}
	return nil
}

func (x *AuctionResponse) GetCreateAuctionBoardResponse() *CreateAuctionBoardResponse {
	if x, ok := x.GetResponse().(*AuctionResponse_CreateAuctionBoardResponse); ok {
		return x.CreateAuctionBoardResponse
	}
	return nil
}

func (x *AuctionResponse) GetUpdateAuctionBoardResponse() *UpdateAuctionBoardResponse {
	if x, ok := x.GetResponse().(*AuctionResponse_UpdateAuctionBoardResponse); ok {
		return x.UpdateAuctionBoardResponse
	}
	return nil
}

func (x *AuctionResponse) GetDeleteAuctionBoardResponse() *DeleteAuctionBoardResponse {
	if x, ok := x.GetResponse().(*AuctionResponse_DeleteAuctionBoardResponse); ok {
		return x.DeleteAuctionBoardResponse
	}
	return nil
}

func (x *AuctionResponse) GetFetchAuctionBoardResponse() *FetchAuctionBoardResponse {
	if x, ok := x.GetResponse().(*AuctionResponse_FetchAuctionBoardResponse); ok {
		return x.FetchAuctionBoardResponse
	}
	return nil
}

func (x *AuctionResponse) GetJoinAuctionBoardResponse() *JoinAuctionBoardResponse {
	if x, ok := x.GetResponse().(*AuctionResponse_JoinAuctionBoardResponse); ok {
		return x.JoinAuctionBoardResponse
	}
	return nil
}

func (x *AuctionResponse) GetChangeParticipantRoleResponse() *ChangeParticipantRoleResponse {
	if x, ok := x.GetResponse().(*AuctionResponse_ChangeParticipantRoleResponse); ok {
		return x.ChangeParticipantRoleResponse
	}
	return nil
}

func (x *AuctionResponse) GetFetchParticipantListResponse() *FetchParticipantListResponse {
	if x, ok := x.GetResponse().(*AuctionResponse_FetchParticipantListResponse); ok {
		return x.FetchParticipantListResponse
	}
	return nil
}

type isAuctionResponse_Response interface {
	isAuctionResponse_Response()
}

type AuctionResponse_FetchPlayerInfoResponse struct {
	FetchPlayerInfoResponse *FetchPlayerInfoResponse `protobuf:"bytes,3,opt,name=fetch_player_info_response,json=fetchPlayerInfoResponse,proto3,oneof"`
}

type AuctionResponse_UpdatePlayerInfoResponse struct {
	UpdatePlayerInfoResponse *UpdatePlayerInfoResponse `protobuf:"bytes,4,opt,name=update_player_info_response,json=updatePlayerInfoResponse,proto3,oneof"`
}

type AuctionResponse_CreateAuctionBoardResponse struct {
	CreateAuctionBoardResponse *CreateAuctionBoardResponse `protobuf:"bytes,5,opt,name=create_auction_board_response,json=createAuctionBoardResponse,proto3,oneof"`
}

type AuctionResponse_UpdateAuctionBoardResponse struct {
	UpdateAuctionBoardResponse *UpdateAuctionBoardResponse `protobuf:"bytes,6,opt,name=update_auction_board_response,json=updateAuctionBoardResponse,proto3,oneof"`
}

type AuctionResponse_DeleteAuctionBoardResponse struct {
	DeleteAuctionBoardResponse *DeleteAuctionBoardResponse `protobuf:"bytes,7,opt,name=delete_auction_board_response,json=deleteAuctionBoardResponse,proto3,oneof"`
}

type AuctionResponse_FetchAuctionBoardResponse struct {
	FetchAuctionBoardResponse *FetchAuctionBoardResponse `protobuf:"bytes,8,opt,name=fetch_auction_board_response,json=fetchAuctionBoardResponse,proto3,oneof"`
}

type AuctionResponse_JoinAuctionBoardResponse struct {
	JoinAuctionBoardResponse *JoinAuctionBoardResponse `protobuf:"bytes,9,opt,name=join_auction_board_response,json=joinAuctionBoardResponse,proto3,oneof"`
}

type AuctionResponse_ChangeParticipantRoleResponse struct {
	ChangeParticipantRoleResponse *ChangeParticipantRoleResponse `protobuf:"bytes,10,opt,name=change_participant_role_response,json=changeParticipantRoleResponse,proto3,oneof"`
}

type AuctionResponse_FetchParticipantListResponse struct {
	FetchParticipantListResponse *FetchParticipantListResponse `protobuf:"bytes,11,opt,name=fetch_participant_list_response,json=fetchParticipantListResponse,proto3,oneof"`
}

func (*AuctionResponse_FetchPlayerInfoResponse) isAuctionResponse_Response() {}

func (*AuctionResponse_UpdatePlayerInfoResponse) isAuctionResponse_Response() {}

func (*AuctionResponse_CreateAuctionBoardResponse) isAuctionResponse_Response() {}

func (*AuctionResponse_UpdateAuctionBoardResponse) isAuctionResponse_Response() {}

func (*AuctionResponse_DeleteAuctionBoardResponse) isAuctionResponse_Response() {}

func (*AuctionResponse_FetchAuctionBoardResponse) isAuctionResponse_Response() {}

func (*AuctionResponse_JoinAuctionBoardResponse) isAuctionResponse_Response() {}

func (*AuctionResponse_ChangeParticipantRoleResponse) isAuctionResponse_Response() {}

func (*AuctionResponse_FetchParticipantListResponse) isAuctionResponse_Response() {}

type FetchPlayerInfoByUserUUIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid string `protobuf:"bytes,1,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
}

func (x *FetchPlayerInfoByUserUUIDRequest) Reset() {
	*x = FetchPlayerInfoByUserUUIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchPlayerInfoByUserUUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchPlayerInfoByUserUUIDRequest) ProtoMessage() {}

func (x *FetchPlayerInfoByUserUUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchPlayerInfoByUserUUIDRequest.ProtoReflect.Descriptor instead.
func (*FetchPlayerInfoByUserUUIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{2}
}

func (x *FetchPlayerInfoByUserUUIDRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

type FetchPlayerInfoByPlayerUUIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerUuid string `protobuf:"bytes,1,opt,name=player_uuid,json=playerUuid,proto3" json:"player_uuid,omitempty"`
}

func (x *FetchPlayerInfoByPlayerUUIDRequest) Reset() {
	*x = FetchPlayerInfoByPlayerUUIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchPlayerInfoByPlayerUUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchPlayerInfoByPlayerUUIDRequest) ProtoMessage() {}

func (x *FetchPlayerInfoByPlayerUUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchPlayerInfoByPlayerUUIDRequest.ProtoReflect.Descriptor instead.
func (*FetchPlayerInfoByPlayerUUIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{3}
}

func (x *FetchPlayerInfoByPlayerUUIDRequest) GetPlayerUuid() string {
	if x != nil {
		return x.PlayerUuid
	}
	return ""
}

type FetchPlayerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerUuid        string     `protobuf:"bytes,1,opt,name=player_uuid,json=playerUuid,proto3" json:"player_uuid,omitempty"`
	PlayerName        string     `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	PlayerBio         string     `protobuf:"bytes,3,opt,name=player_bio,json=playerBio,proto3" json:"player_bio,omitempty"`
	PlayerProfileLink string     `protobuf:"bytes,4,opt,name=player_profile_link,json=playerProfileLink,proto3" json:"player_profile_link,omitempty"`
	PlayerType        PlayerType `protobuf:"varint,5,opt,name=player_type,json=playerType,proto3,enum=auctioncmd.PlayerType" json:"player_type,omitempty"`
	PlayerPicture     []byte     `protobuf:"bytes,6,opt,name=player_picture,json=playerPicture,proto3" json:"player_picture,omitempty"`
	IsPlayerActive    bool       `protobuf:"varint,7,opt,name=is_player_active,json=isPlayerActive,proto3" json:"is_player_active,omitempty"`
}

func (x *FetchPlayerInfoResponse) Reset() {
	*x = FetchPlayerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchPlayerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchPlayerInfoResponse) ProtoMessage() {}

func (x *FetchPlayerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchPlayerInfoResponse.ProtoReflect.Descriptor instead.
func (*FetchPlayerInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{4}
}

func (x *FetchPlayerInfoResponse) GetPlayerUuid() string {
	if x != nil {
		return x.PlayerUuid
	}
	return ""
}

func (x *FetchPlayerInfoResponse) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *FetchPlayerInfoResponse) GetPlayerBio() string {
	if x != nil {
		return x.PlayerBio
	}
	return ""
}

func (x *FetchPlayerInfoResponse) GetPlayerProfileLink() string {
	if x != nil {
		return x.PlayerProfileLink
	}
	return ""
}

func (x *FetchPlayerInfoResponse) GetPlayerType() PlayerType {
	if x != nil {
		return x.PlayerType
	}
	return PlayerType_NONE
}

func (x *FetchPlayerInfoResponse) GetPlayerPicture() []byte {
	if x != nil {
		return x.PlayerPicture
	}
	return nil
}

func (x *FetchPlayerInfoResponse) GetIsPlayerActive() bool {
	if x != nil {
		return x.IsPlayerActive
	}
	return false
}

type UpdatePlayerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid          string     `protobuf:"bytes,1,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
	PlayerName        string     `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	PlayerBio         string     `protobuf:"bytes,3,opt,name=player_bio,json=playerBio,proto3" json:"player_bio,omitempty"`
	PlayerProfileLink string     `protobuf:"bytes,4,opt,name=player_profile_link,json=playerProfileLink,proto3" json:"player_profile_link,omitempty"`
	PlayerType        PlayerType `protobuf:"varint,5,opt,name=player_type,json=playerType,proto3,enum=auctioncmd.PlayerType" json:"player_type,omitempty"`
	PlayerPicture     []byte     `protobuf:"bytes,6,opt,name=player_picture,json=playerPicture,proto3" json:"player_picture,omitempty"`
	IsPlayerActive    bool       `protobuf:"varint,7,opt,name=is_player_active,json=isPlayerActive,proto3" json:"is_player_active,omitempty"`
}

func (x *UpdatePlayerInfoRequest) Reset() {
	*x = UpdatePlayerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayerInfoRequest) ProtoMessage() {}

func (x *UpdatePlayerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayerInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlayerInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePlayerInfoRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *UpdatePlayerInfoRequest) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *UpdatePlayerInfoRequest) GetPlayerBio() string {
	if x != nil {
		return x.PlayerBio
	}
	return ""
}

func (x *UpdatePlayerInfoRequest) GetPlayerProfileLink() string {
	if x != nil {
		return x.PlayerProfileLink
	}
	return ""
}

func (x *UpdatePlayerInfoRequest) GetPlayerType() PlayerType {
	if x != nil {
		return x.PlayerType
	}
	return PlayerType_NONE
}

func (x *UpdatePlayerInfoRequest) GetPlayerPicture() []byte {
	if x != nil {
		return x.PlayerPicture
	}
	return nil
}

func (x *UpdatePlayerInfoRequest) GetIsPlayerActive() bool {
	if x != nil {
		return x.IsPlayerActive
	}
	return false
}

type UpdatePlayerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateSuccess bool   `protobuf:"varint,1,opt,name=update_success,json=updateSuccess,proto3" json:"update_success,omitempty"`
	PlayerUuid    string `protobuf:"bytes,2,opt,name=player_uuid,json=playerUuid,proto3" json:"player_uuid,omitempty"`
}

func (x *UpdatePlayerInfoResponse) Reset() {
	*x = UpdatePlayerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayerInfoResponse) ProtoMessage() {}

func (x *UpdatePlayerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayerInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdatePlayerInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePlayerInfoResponse) GetUpdateSuccess() bool {
	if x != nil {
		return x.UpdateSuccess
	}
	return false
}

func (x *UpdatePlayerInfoResponse) GetPlayerUuid() string {
	if x != nil {
		return x.PlayerUuid
	}
	return ""
}

type PlayerCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryName    string `protobuf:"bytes,1,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	PlayerBasePrice uint64 `protobuf:"varint,2,opt,name=player_base_price,json=playerBasePrice,proto3" json:"player_base_price,omitempty"`
	CategoryUuid    string `protobuf:"bytes,3,opt,name=category_uuid,json=categoryUuid,proto3" json:"category_uuid,omitempty"` //repeated AuctionPlayer player_id_set = 3;
}

func (x *PlayerCategory) Reset() {
	*x = PlayerCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCategory) ProtoMessage() {}

func (x *PlayerCategory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCategory.ProtoReflect.Descriptor instead.
func (*PlayerCategory) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{7}
}

func (x *PlayerCategory) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *PlayerCategory) GetPlayerBasePrice() uint64 {
	if x != nil {
		return x.PlayerBasePrice
	}
	return 0
}

func (x *PlayerCategory) GetCategoryUuid() string {
	if x != nil {
		return x.CategoryUuid
	}
	return ""
}

type CreateAuctionBoardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctioneerPlayerUuid string               `protobuf:"bytes,1,opt,name=auctioneer_player_uuid,json=auctioneerPlayerUuid,proto3" json:"auctioneer_player_uuid,omitempty"`
	AuctionBoardName     string               `protobuf:"bytes,2,opt,name=auction_board_name,json=auctionBoardName,proto3" json:"auction_board_name,omitempty"`
	ScheduleTime         *timestamp.Timestamp `protobuf:"bytes,3,opt,name=schedule_time,json=scheduleTime,proto3" json:"schedule_time,omitempty"`
	PurseMoney           uint64               `protobuf:"varint,4,opt,name=purse_money,json=purseMoney,proto3" json:"purse_money,omitempty"`
	PurseCcy             string               `protobuf:"bytes,5,opt,name=purse_ccy,json=purseCcy,proto3" json:"purse_ccy,omitempty"`
	PlayerCategoryList   []*PlayerCategory    `protobuf:"bytes,6,rep,name=player_category_list,json=playerCategoryList,proto3" json:"player_category_list,omitempty"` // repeated AutionParticipant participant_list = 5;
}

func (x *CreateAuctionBoardRequest) Reset() {
	*x = CreateAuctionBoardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuctionBoardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuctionBoardRequest) ProtoMessage() {}

func (x *CreateAuctionBoardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuctionBoardRequest.ProtoReflect.Descriptor instead.
func (*CreateAuctionBoardRequest) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{8}
}

func (x *CreateAuctionBoardRequest) GetAuctioneerPlayerUuid() string {
	if x != nil {
		return x.AuctioneerPlayerUuid
	}
	return ""
}

func (x *CreateAuctionBoardRequest) GetAuctionBoardName() string {
	if x != nil {
		return x.AuctionBoardName
	}
	return ""
}

func (x *CreateAuctionBoardRequest) GetScheduleTime() *timestamp.Timestamp {
	if x != nil {
		return x.ScheduleTime
	}
	return nil
}

func (x *CreateAuctionBoardRequest) GetPurseMoney() uint64 {
	if x != nil {
		return x.PurseMoney
	}
	return 0
}

func (x *CreateAuctionBoardRequest) GetPurseCcy() string {
	if x != nil {
		return x.PurseCcy
	}
	return ""
}

func (x *CreateAuctionBoardRequest) GetPlayerCategoryList() []*PlayerCategory {
	if x != nil {
		return x.PlayerCategoryList
	}
	return nil
}

type CreateAuctionBoardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionBoardUuid string `protobuf:"bytes,1,opt,name=auction_board_uuid,json=auctionBoardUuid,proto3" json:"auction_board_uuid,omitempty"`
	AuctionCode      uint32 `protobuf:"varint,2,opt,name=auction_code,json=auctionCode,proto3" json:"auction_code,omitempty"`
}

func (x *CreateAuctionBoardResponse) Reset() {
	*x = CreateAuctionBoardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuctionBoardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuctionBoardResponse) ProtoMessage() {}

func (x *CreateAuctionBoardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuctionBoardResponse.ProtoReflect.Descriptor instead.
func (*CreateAuctionBoardResponse) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{9}
}

func (x *CreateAuctionBoardResponse) GetAuctionBoardUuid() string {
	if x != nil {
		return x.AuctionBoardUuid
	}
	return ""
}

func (x *CreateAuctionBoardResponse) GetAuctionCode() uint32 {
	if x != nil {
		return x.AuctionCode
	}
	return 0
}

type FetchAuctionBoardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionBoardUuid string `protobuf:"bytes,1,opt,name=auction_board_uuid,json=auctionBoardUuid,proto3" json:"auction_board_uuid,omitempty"`
}

func (x *FetchAuctionBoardRequest) Reset() {
	*x = FetchAuctionBoardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchAuctionBoardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAuctionBoardRequest) ProtoMessage() {}

func (x *FetchAuctionBoardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAuctionBoardRequest.ProtoReflect.Descriptor instead.
func (*FetchAuctionBoardRequest) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{10}
}

func (x *FetchAuctionBoardRequest) GetAuctionBoardUuid() string {
	if x != nil {
		return x.AuctionBoardUuid
	}
	return ""
}

type AuctionBoardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctioneerPlayerUuid string               `protobuf:"bytes,1,opt,name=auctioneer_player_uuid,json=auctioneerPlayerUuid,proto3" json:"auctioneer_player_uuid,omitempty"`
	AuctionBoardName     string               `protobuf:"bytes,2,opt,name=auction_board_name,json=auctionBoardName,proto3" json:"auction_board_name,omitempty"`
	ScheduleTime         *timestamp.Timestamp `protobuf:"bytes,3,opt,name=schedule_time,json=scheduleTime,proto3" json:"schedule_time,omitempty"`
	PurseMoney           uint64               `protobuf:"varint,4,opt,name=purse_money,json=purseMoney,proto3" json:"purse_money,omitempty"`
	PurseCcy             string               `protobuf:"bytes,5,opt,name=purse_ccy,json=purseCcy,proto3" json:"purse_ccy,omitempty"`
	PlayerCategoryList   []*PlayerCategory    `protobuf:"bytes,6,rep,name=player_category_list,json=playerCategoryList,proto3" json:"player_category_list,omitempty"`
	AuctionCode          uint32               `protobuf:"varint,7,opt,name=auction_code,json=auctionCode,proto3" json:"auction_code,omitempty"`
	IsActive             bool                 `protobuf:"varint,8,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *AuctionBoardInfo) Reset() {
	*x = AuctionBoardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionBoardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionBoardInfo) ProtoMessage() {}

func (x *AuctionBoardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionBoardInfo.ProtoReflect.Descriptor instead.
func (*AuctionBoardInfo) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{11}
}

func (x *AuctionBoardInfo) GetAuctioneerPlayerUuid() string {
	if x != nil {
		return x.AuctioneerPlayerUuid
	}
	return ""
}

func (x *AuctionBoardInfo) GetAuctionBoardName() string {
	if x != nil {
		return x.AuctionBoardName
	}
	return ""
}

func (x *AuctionBoardInfo) GetScheduleTime() *timestamp.Timestamp {
	if x != nil {
		return x.ScheduleTime
	}
	return nil
}

func (x *AuctionBoardInfo) GetPurseMoney() uint64 {
	if x != nil {
		return x.PurseMoney
	}
	return 0
}

func (x *AuctionBoardInfo) GetPurseCcy() string {
	if x != nil {
		return x.PurseCcy
	}
	return ""
}

func (x *AuctionBoardInfo) GetPlayerCategoryList() []*PlayerCategory {
	if x != nil {
		return x.PlayerCategoryList
	}
	return nil
}

func (x *AuctionBoardInfo) GetAuctionCode() uint32 {
	if x != nil {
		return x.AuctionCode
	}
	return 0
}

func (x *AuctionBoardInfo) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type FetchAuctionBoardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionBoardInfo *AuctionBoardInfo `protobuf:"bytes,1,opt,name=auction_board_info,json=auctionBoardInfo,proto3" json:"auction_board_info,omitempty"`
}

func (x *FetchAuctionBoardResponse) Reset() {
	*x = FetchAuctionBoardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchAuctionBoardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAuctionBoardResponse) ProtoMessage() {}

func (x *FetchAuctionBoardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAuctionBoardResponse.ProtoReflect.Descriptor instead.
func (*FetchAuctionBoardResponse) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{12}
}

func (x *FetchAuctionBoardResponse) GetAuctionBoardInfo() *AuctionBoardInfo {
	if x != nil {
		return x.AuctionBoardInfo
	}
	return nil
}

type DeleteAuctionBoardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionBoardUuid string `protobuf:"bytes,1,opt,name=auction_board_uuid,json=auctionBoardUuid,proto3" json:"auction_board_uuid,omitempty"`
}

func (x *DeleteAuctionBoardRequest) Reset() {
	*x = DeleteAuctionBoardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuctionBoardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuctionBoardRequest) ProtoMessage() {}

func (x *DeleteAuctionBoardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuctionBoardRequest.ProtoReflect.Descriptor instead.
func (*DeleteAuctionBoardRequest) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteAuctionBoardRequest) GetAuctionBoardUuid() string {
	if x != nil {
		return x.AuctionBoardUuid
	}
	return ""
}

type DeleteAuctionBoardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteAuctionBoardResponse) Reset() {
	*x = DeleteAuctionBoardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuctionBoardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuctionBoardResponse) ProtoMessage() {}

func (x *DeleteAuctionBoardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuctionBoardResponse.ProtoReflect.Descriptor instead.
func (*DeleteAuctionBoardResponse) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteAuctionBoardResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateAuctionBoardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionBoardUuid string               `protobuf:"bytes,1,opt,name=auction_board_uuid,json=auctionBoardUuid,proto3" json:"auction_board_uuid,omitempty"`
	AuctionBoardName string               `protobuf:"bytes,2,opt,name=auction_board_name,json=auctionBoardName,proto3" json:"auction_board_name,omitempty"`
	ScheduleTime     *timestamp.Timestamp `protobuf:"bytes,3,opt,name=schedule_time,json=scheduleTime,proto3" json:"schedule_time,omitempty"`
	PurseMoney       uint64               `protobuf:"varint,4,opt,name=purse_money,json=purseMoney,proto3" json:"purse_money,omitempty"`
	PurseCcy         string               `protobuf:"bytes,5,opt,name=purse_ccy,json=purseCcy,proto3" json:"purse_ccy,omitempty"`
}

func (x *UpdateAuctionBoardRequest) Reset() {
	*x = UpdateAuctionBoardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuctionBoardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuctionBoardRequest) ProtoMessage() {}

func (x *UpdateAuctionBoardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuctionBoardRequest.ProtoReflect.Descriptor instead.
func (*UpdateAuctionBoardRequest) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateAuctionBoardRequest) GetAuctionBoardUuid() string {
	if x != nil {
		return x.AuctionBoardUuid
	}
	return ""
}

func (x *UpdateAuctionBoardRequest) GetAuctionBoardName() string {
	if x != nil {
		return x.AuctionBoardName
	}
	return ""
}

func (x *UpdateAuctionBoardRequest) GetScheduleTime() *timestamp.Timestamp {
	if x != nil {
		return x.ScheduleTime
	}
	return nil
}

func (x *UpdateAuctionBoardRequest) GetPurseMoney() uint64 {
	if x != nil {
		return x.PurseMoney
	}
	return 0
}

func (x *UpdateAuctionBoardRequest) GetPurseCcy() string {
	if x != nil {
		return x.PurseCcy
	}
	return ""
}

type UpdateAuctionBoardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateAuctionBoardResponse) Reset() {
	*x = UpdateAuctionBoardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuctionBoardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuctionBoardResponse) ProtoMessage() {}

func (x *UpdateAuctionBoardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuctionBoardResponse.ProtoReflect.Descriptor instead.
func (*UpdateAuctionBoardResponse) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateAuctionBoardResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type JoinAuctionBoardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctioneerPlayerUuid string          `protobuf:"bytes,1,opt,name=auctioneer_player_uuid,json=auctioneerPlayerUuid,proto3" json:"auctioneer_player_uuid,omitempty"`
	AuctionBoardUuid     string          `protobuf:"bytes,2,opt,name=auction_board_uuid,json=auctionBoardUuid,proto3" json:"auction_board_uuid,omitempty"`
	ParticipantRole      ParticipantRole `protobuf:"varint,3,opt,name=participant_role,json=participantRole,proto3,enum=auctioncmd.ParticipantRole" json:"participant_role,omitempty"`
	AuctionCategoryId    string          `protobuf:"bytes,4,opt,name=auction_category_id,json=auctionCategoryId,proto3" json:"auction_category_id,omitempty"` //optional player category - set when role = PLAYER_UNDER_HAMMER
}

func (x *JoinAuctionBoardRequest) Reset() {
	*x = JoinAuctionBoardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinAuctionBoardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinAuctionBoardRequest) ProtoMessage() {}

func (x *JoinAuctionBoardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinAuctionBoardRequest.ProtoReflect.Descriptor instead.
func (*JoinAuctionBoardRequest) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{17}
}

func (x *JoinAuctionBoardRequest) GetAuctioneerPlayerUuid() string {
	if x != nil {
		return x.AuctioneerPlayerUuid
	}
	return ""
}

func (x *JoinAuctionBoardRequest) GetAuctionBoardUuid() string {
	if x != nil {
		return x.AuctionBoardUuid
	}
	return ""
}

func (x *JoinAuctionBoardRequest) GetParticipantRole() ParticipantRole {
	if x != nil {
		return x.ParticipantRole
	}
	return ParticipantRole_VIEWER
}

func (x *JoinAuctionBoardRequest) GetAuctionCategoryId() string {
	if x != nil {
		return x.AuctionCategoryId
	}
	return ""
}

type JoinAuctionBoardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *JoinAuctionBoardResponse) Reset() {
	*x = JoinAuctionBoardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinAuctionBoardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinAuctionBoardResponse) ProtoMessage() {}

func (x *JoinAuctionBoardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinAuctionBoardResponse.ProtoReflect.Descriptor instead.
func (*JoinAuctionBoardResponse) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{18}
}

func (x *JoinAuctionBoardResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ChangeParticipantRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctioneerPlayerUuid []string        `protobuf:"bytes,1,rep,name=auctioneer_player_uuid,json=auctioneerPlayerUuid,proto3" json:"auctioneer_player_uuid,omitempty"`
	AuctionBoardUuid     string          `protobuf:"bytes,2,opt,name=auction_board_uuid,json=auctionBoardUuid,proto3" json:"auction_board_uuid,omitempty"`
	ParticipantRole      ParticipantRole `protobuf:"varint,3,opt,name=participant_role,json=participantRole,proto3,enum=auctioncmd.ParticipantRole" json:"participant_role,omitempty"`
	AuctionCategoryId    string          `protobuf:"bytes,4,opt,name=auction_category_id,json=auctionCategoryId,proto3" json:"auction_category_id,omitempty"` //optional player category - set when role = PLAYER_UNDER_HAMMER
}

func (x *ChangeParticipantRoleRequest) Reset() {
	*x = ChangeParticipantRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeParticipantRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeParticipantRoleRequest) ProtoMessage() {}

func (x *ChangeParticipantRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeParticipantRoleRequest.ProtoReflect.Descriptor instead.
func (*ChangeParticipantRoleRequest) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{19}
}

func (x *ChangeParticipantRoleRequest) GetAuctioneerPlayerUuid() []string {
	if x != nil {
		return x.AuctioneerPlayerUuid
	}
	return nil
}

func (x *ChangeParticipantRoleRequest) GetAuctionBoardUuid() string {
	if x != nil {
		return x.AuctionBoardUuid
	}
	return ""
}

func (x *ChangeParticipantRoleRequest) GetParticipantRole() ParticipantRole {
	if x != nil {
		return x.ParticipantRole
	}
	return ParticipantRole_VIEWER
}

func (x *ChangeParticipantRoleRequest) GetAuctionCategoryId() string {
	if x != nil {
		return x.AuctionCategoryId
	}
	return ""
}

type ChangeParticipantRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ChangeParticipantRoleResponse) Reset() {
	*x = ChangeParticipantRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeParticipantRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeParticipantRoleResponse) ProtoMessage() {}

func (x *ChangeParticipantRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeParticipantRoleResponse.ProtoReflect.Descriptor instead.
func (*ChangeParticipantRoleResponse) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{20}
}

func (x *ChangeParticipantRoleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type FetchParticipantListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionBoardUuid string `protobuf:"bytes,1,opt,name=auction_board_uuid,json=auctionBoardUuid,proto3" json:"auction_board_uuid,omitempty"`
}

func (x *FetchParticipantListRequest) Reset() {
	*x = FetchParticipantListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchParticipantListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchParticipantListRequest) ProtoMessage() {}

func (x *FetchParticipantListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchParticipantListRequest.ProtoReflect.Descriptor instead.
func (*FetchParticipantListRequest) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{21}
}

func (x *FetchParticipantListRequest) GetAuctionBoardUuid() string {
	if x != nil {
		return x.AuctionBoardUuid
	}
	return ""
}

type AuctionParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctioneerPlayerUuid string          `protobuf:"bytes,1,opt,name=auctioneer_player_uuid,json=auctioneerPlayerUuid,proto3" json:"auctioneer_player_uuid,omitempty"`
	ParticipantRole      ParticipantRole `protobuf:"varint,2,opt,name=participant_role,json=participantRole,proto3,enum=auctioncmd.ParticipantRole" json:"participant_role,omitempty"`
	AuctionCategoryId    string          `protobuf:"bytes,3,opt,name=auction_category_id,json=auctionCategoryId,proto3" json:"auction_category_id,omitempty"`
}

func (x *AuctionParticipant) Reset() {
	*x = AuctionParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionParticipant) ProtoMessage() {}

func (x *AuctionParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionParticipant.ProtoReflect.Descriptor instead.
func (*AuctionParticipant) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{22}
}

func (x *AuctionParticipant) GetAuctioneerPlayerUuid() string {
	if x != nil {
		return x.AuctioneerPlayerUuid
	}
	return ""
}

func (x *AuctionParticipant) GetParticipantRole() ParticipantRole {
	if x != nil {
		return x.ParticipantRole
	}
	return ParticipantRole_VIEWER
}

func (x *AuctionParticipant) GetAuctionCategoryId() string {
	if x != nil {
		return x.AuctionCategoryId
	}
	return ""
}

type FetchParticipantListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionParticipantList []*AuctionParticipant `protobuf:"bytes,1,rep,name=auction_participant_list,json=auctionParticipantList,proto3" json:"auction_participant_list,omitempty"`
}

func (x *FetchParticipantListResponse) Reset() {
	*x = FetchParticipantListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchParticipantListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchParticipantListResponse) ProtoMessage() {}

func (x *FetchParticipantListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchParticipantListResponse.ProtoReflect.Descriptor instead.
func (*FetchParticipantListResponse) Descriptor() ([]byte, []int) {
	return file_proto_command_proto_rawDescGZIP(), []int{23}
}

func (x *FetchParticipantListResponse) GetAuctionParticipantList() []*AuctionParticipant {
	if x != nil {
		return x.AuctionParticipantList
	}
	return nil
}

var File_proto_command_proto protoreflect.FileDescriptor

var file_proto_command_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d,
	0x64, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xf5, 0x0b, 0x0a, 0x0e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x80, 0x01, 0x0a, 0x26, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x62, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x20, 0x66, 0x65, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x86, 0x01, 0x0a, 0x28, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x62, 0x79, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x63, 0x6d, 0x64, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x22, 0x66, 0x65, 0x74, 0x63, 0x68, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x1a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x68, 0x0a, 0x1c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x63, 0x6d, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x19, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x1c, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x19, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x1c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x19, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x65,
	0x0a, 0x1b, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64,
	0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x1a, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x17, 0x6a, 0x6f, 0x69, 0x6e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x71, 0x0a, 0x1f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1c,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6e, 0x0a, 0x1e,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d,
	0x64, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x1b, 0x66, 0x65, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb0, 0x02, 0x0a,
	0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x46, 0x45, 0x54, 0x43, 0x48, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x42, 0x59, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x55, 0x55, 0x49, 0x44, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x46, 0x45,
	0x54, 0x43, 0x48, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f,
	0x42, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x55, 0x55, 0x49, 0x44, 0x10, 0x02,
	0x12, 0x16, 0x0a, 0x12, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x5f, 0x41, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44,
	0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x55, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x41, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42,
	0x4f, 0x41, 0x52, 0x44, 0x10, 0x06, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x45, 0x54, 0x43, 0x48, 0x5f,
	0x41, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x41, 0x55, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x08, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45,
	0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x52, 0x4f, 0x4c,
	0x45, 0x10, 0x09, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x50, 0x41, 0x52,
	0x54, 0x49, 0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x0a, 0x42,
	0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd1, 0x0a, 0x0a, 0x0f, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x4d, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x28, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x62, 0x0a, 0x1a, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x17, 0x66, 0x65, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a,
	0x1b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x1d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6b, 0x0a, 0x1d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x1a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b,
	0x0a, 0x1d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63,
	0x6d, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x1a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x1c, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x66, 0x65, 0x74, 0x63,
	0x68, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x1b, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x18, 0x6a, 0x6f, 0x69, 0x6e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x20,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x63, 0x6d, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x1d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x71, 0x0a, 0x1f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1c, 0x66, 0x65, 0x74, 0x63, 0x68, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xfa, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x02,
	0x12, 0x18, 0x0a, 0x14, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x55, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x4f, 0x41,
	0x52, 0x44, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x41,
	0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x10, 0x05, 0x12, 0x17,
	0x0a, 0x13, 0x46, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x41, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x42, 0x4f, 0x41, 0x52, 0x44, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x4f, 0x49, 0x4e, 0x5f,
	0x41, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f,
	0x52, 0x4f, 0x4c, 0x45, 0x10, 0x08, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x45, 0x54, 0x43, 0x48, 0x5f,
	0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54,
	0x10, 0x09, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f,
	0x0a, 0x20, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22,
	0x45, 0x0a, 0x22, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0xb4, 0x02, 0x0a, 0x17, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62,
	0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x42, 0x69, 0x6f, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69,
	0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xb0, 0x02,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x62, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x69, 0x6f, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x22, 0x62, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0xcc, 0x02,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3f, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x63, 0x63, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x72, 0x73, 0x65, 0x43, 0x63, 0x79, 0x12, 0x4c,
	0x0a, 0x14, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x1a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x48, 0x0a, 0x18, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x55, 0x75, 0x69, 0x64, 0x22, 0x83, 0x03, 0x0a, 0x10, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f,
	0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x63, 0x63, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x72, 0x73, 0x65, 0x43, 0x63, 0x79, 0x12, 0x4c, 0x0a,
	0x14, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x67, 0x0a, 0x19, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d,
	0x64, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x10, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x49, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x75, 0x69, 0x64, 0x22,
	0x36, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x63, 0x63, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x72, 0x73, 0x65, 0x43, 0x63, 0x79,
	0x22, 0x36, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xf5, 0x01, 0x0a, 0x17, 0x4a, 0x6f, 0x69,
	0x6e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65,
	0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x55, 0x75, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x22, 0x34, 0x0a, 0x18, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xfa, 0x01, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x65, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x65, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a,
	0x12, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x75, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63,
	0x6d, 0x64, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4b,
	0x0a, 0x1b, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x12, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x75, 0x69, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x12,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x22, 0x78, 0x0a, 0x1c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x18, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x63, 0x6d, 0x64, 0x2e,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x52, 0x16, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x2a, 0x9a, 0x01, 0x0a, 0x0a, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x48, 0x41, 0x4e,
	0x44, 0x45, 0x44, 0x5f, 0x42, 0x41, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x45, 0x46,
	0x54, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x45, 0x44, 0x5f, 0x42, 0x41, 0x54, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x41, 0x52, 0x4d, 0x5f, 0x42, 0x4f, 0x57, 0x4c,
	0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x45, 0x46, 0x54, 0x5f, 0x41, 0x52, 0x4d, 0x5f, 0x42,
	0x4f, 0x57, 0x4c, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x41, 0x54, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x10, 0x05, 0x12, 0x17,
	0x0a, 0x13, 0x42, 0x4f, 0x57, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x52, 0x4f,
	0x55, 0x4e, 0x44, 0x45, 0x52, 0x10, 0x06, 0x2a, 0x6a, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x49,
	0x45, 0x57, 0x45, 0x52, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x48, 0x41, 0x4d, 0x4d, 0x45, 0x52, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x43, 0x41, 0x50, 0x54, 0x41, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a,
	0x41, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x45, 0x45, 0x52, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11,
	0x41, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x45, 0x45, 0x52, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x10, 0x04, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_command_proto_rawDescOnce sync.Once
	file_proto_command_proto_rawDescData = file_proto_command_proto_rawDesc
)

func file_proto_command_proto_rawDescGZIP() []byte {
	file_proto_command_proto_rawDescOnce.Do(func() {
		file_proto_command_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_command_proto_rawDescData)
	})
	return file_proto_command_proto_rawDescData
}

var file_proto_command_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_command_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_proto_command_proto_goTypes = []interface{}{
	(PlayerType)(0),                            // 0: auctioncmd.PlayerType
	(ParticipantRole)(0),                       // 1: auctioncmd.ParticipantRole
	(AuctionRequest_RequestType)(0),            // 2: auctioncmd.AuctionRequest.RequestType
	(AuctionResponse_ResponseType)(0),          // 3: auctioncmd.AuctionResponse.ResponseType
	(*AuctionRequest)(nil),                     // 4: auctioncmd.AuctionRequest
	(*AuctionResponse)(nil),                    // 5: auctioncmd.AuctionResponse
	(*FetchPlayerInfoByUserUUIDRequest)(nil),   // 6: auctioncmd.FetchPlayerInfoByUserUUIDRequest
	(*FetchPlayerInfoByPlayerUUIDRequest)(nil), // 7: auctioncmd.FetchPlayerInfoByPlayerUUIDRequest
	(*FetchPlayerInfoResponse)(nil),            // 8: auctioncmd.FetchPlayerInfoResponse
	(*UpdatePlayerInfoRequest)(nil),            // 9: auctioncmd.UpdatePlayerInfoRequest
	(*UpdatePlayerInfoResponse)(nil),           // 10: auctioncmd.UpdatePlayerInfoResponse
	(*PlayerCategory)(nil),                     // 11: auctioncmd.PlayerCategory
	(*CreateAuctionBoardRequest)(nil),          // 12: auctioncmd.CreateAuctionBoardRequest
	(*CreateAuctionBoardResponse)(nil),         // 13: auctioncmd.CreateAuctionBoardResponse
	(*FetchAuctionBoardRequest)(nil),           // 14: auctioncmd.FetchAuctionBoardRequest
	(*AuctionBoardInfo)(nil),                   // 15: auctioncmd.AuctionBoardInfo
	(*FetchAuctionBoardResponse)(nil),          // 16: auctioncmd.FetchAuctionBoardResponse
	(*DeleteAuctionBoardRequest)(nil),          // 17: auctioncmd.DeleteAuctionBoardRequest
	(*DeleteAuctionBoardResponse)(nil),         // 18: auctioncmd.DeleteAuctionBoardResponse
	(*UpdateAuctionBoardRequest)(nil),          // 19: auctioncmd.UpdateAuctionBoardRequest
	(*UpdateAuctionBoardResponse)(nil),         // 20: auctioncmd.UpdateAuctionBoardResponse
	(*JoinAuctionBoardRequest)(nil),            // 21: auctioncmd.JoinAuctionBoardRequest
	(*JoinAuctionBoardResponse)(nil),           // 22: auctioncmd.JoinAuctionBoardResponse
	(*ChangeParticipantRoleRequest)(nil),       // 23: auctioncmd.ChangeParticipantRoleRequest
	(*ChangeParticipantRoleResponse)(nil),      // 24: auctioncmd.ChangeParticipantRoleResponse
	(*FetchParticipantListRequest)(nil),        // 25: auctioncmd.FetchParticipantListRequest
	(*AuctionParticipant)(nil),                 // 26: auctioncmd.AuctionParticipant
	(*FetchParticipantListResponse)(nil),       // 27: auctioncmd.FetchParticipantListResponse
	(*timestamp.Timestamp)(nil),                // 28: google.protobuf.Timestamp
}
var file_proto_command_proto_depIdxs = []int32{
	2,  // 0: auctioncmd.AuctionRequest.request_type:type_name -> auctioncmd.AuctionRequest.RequestType
	6,  // 1: auctioncmd.AuctionRequest.fetch_player_info_by_user_uuid_request:type_name -> auctioncmd.FetchPlayerInfoByUserUUIDRequest
	7,  // 2: auctioncmd.AuctionRequest.fetch_player_info_by_player_uuid_request:type_name -> auctioncmd.FetchPlayerInfoByPlayerUUIDRequest
	9,  // 3: auctioncmd.AuctionRequest.update_player_info_request:type_name -> auctioncmd.UpdatePlayerInfoRequest
	12, // 4: auctioncmd.AuctionRequest.create_auction_board_request:type_name -> auctioncmd.CreateAuctionBoardRequest
	19, // 5: auctioncmd.AuctionRequest.update_auction_board_request:type_name -> auctioncmd.UpdateAuctionBoardRequest
	17, // 6: auctioncmd.AuctionRequest.delete_auction_board_request:type_name -> auctioncmd.DeleteAuctionBoardRequest
	14, // 7: auctioncmd.AuctionRequest.fetch_auction_board_request:type_name -> auctioncmd.FetchAuctionBoardRequest
	21, // 8: auctioncmd.AuctionRequest.join_auction_board_request:type_name -> auctioncmd.JoinAuctionBoardRequest
	23, // 9: auctioncmd.AuctionRequest.change_participant_role_request:type_name -> auctioncmd.ChangeParticipantRoleRequest
	25, // 10: auctioncmd.AuctionRequest.fetch_participant_list_request:type_name -> auctioncmd.FetchParticipantListRequest
	3,  // 11: auctioncmd.AuctionResponse.response_type:type_name -> auctioncmd.AuctionResponse.ResponseType
	8,  // 12: auctioncmd.AuctionResponse.fetch_player_info_response:type_name -> auctioncmd.FetchPlayerInfoResponse
	10, // 13: auctioncmd.AuctionResponse.update_player_info_response:type_name -> auctioncmd.UpdatePlayerInfoResponse
	13, // 14: auctioncmd.AuctionResponse.create_auction_board_response:type_name -> auctioncmd.CreateAuctionBoardResponse
	20, // 15: auctioncmd.AuctionResponse.update_auction_board_response:type_name -> auctioncmd.UpdateAuctionBoardResponse
	18, // 16: auctioncmd.AuctionResponse.delete_auction_board_response:type_name -> auctioncmd.DeleteAuctionBoardResponse
	16, // 17: auctioncmd.AuctionResponse.fetch_auction_board_response:type_name -> auctioncmd.FetchAuctionBoardResponse
	22, // 18: auctioncmd.AuctionResponse.join_auction_board_response:type_name -> auctioncmd.JoinAuctionBoardResponse
	24, // 19: auctioncmd.AuctionResponse.change_participant_role_response:type_name -> auctioncmd.ChangeParticipantRoleResponse
	27, // 20: auctioncmd.AuctionResponse.fetch_participant_list_response:type_name -> auctioncmd.FetchParticipantListResponse
	0,  // 21: auctioncmd.FetchPlayerInfoResponse.player_type:type_name -> auctioncmd.PlayerType
	0,  // 22: auctioncmd.UpdatePlayerInfoRequest.player_type:type_name -> auctioncmd.PlayerType
	28, // 23: auctioncmd.CreateAuctionBoardRequest.schedule_time:type_name -> google.protobuf.Timestamp
	11, // 24: auctioncmd.CreateAuctionBoardRequest.player_category_list:type_name -> auctioncmd.PlayerCategory
	28, // 25: auctioncmd.AuctionBoardInfo.schedule_time:type_name -> google.protobuf.Timestamp
	11, // 26: auctioncmd.AuctionBoardInfo.player_category_list:type_name -> auctioncmd.PlayerCategory
	15, // 27: auctioncmd.FetchAuctionBoardResponse.auction_board_info:type_name -> auctioncmd.AuctionBoardInfo
	28, // 28: auctioncmd.UpdateAuctionBoardRequest.schedule_time:type_name -> google.protobuf.Timestamp
	1,  // 29: auctioncmd.JoinAuctionBoardRequest.participant_role:type_name -> auctioncmd.ParticipantRole
	1,  // 30: auctioncmd.ChangeParticipantRoleRequest.participant_role:type_name -> auctioncmd.ParticipantRole
	1,  // 31: auctioncmd.AuctionParticipant.participant_role:type_name -> auctioncmd.ParticipantRole
	26, // 32: auctioncmd.FetchParticipantListResponse.auction_participant_list:type_name -> auctioncmd.AuctionParticipant
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_proto_command_proto_init() }
func file_proto_command_proto_init() {
	if File_proto_command_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_command_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchPlayerInfoByUserUUIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchPlayerInfoByPlayerUUIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchPlayerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlayerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlayerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuctionBoardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuctionBoardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchAuctionBoardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionBoardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchAuctionBoardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuctionBoardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuctionBoardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuctionBoardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuctionBoardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinAuctionBoardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinAuctionBoardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeParticipantRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeParticipantRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchParticipantListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchParticipantListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_command_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AuctionRequest_FetchPlayerInfoByUserUuidRequest)(nil),
		(*AuctionRequest_FetchPlayerInfoByPlayerUuidRequest)(nil),
		(*AuctionRequest_UpdatePlayerInfoRequest)(nil),
		(*AuctionRequest_CreateAuctionBoardRequest)(nil),
		(*AuctionRequest_UpdateAuctionBoardRequest)(nil),
		(*AuctionRequest_DeleteAuctionBoardRequest)(nil),
		(*AuctionRequest_FetchAuctionBoardRequest)(nil),
		(*AuctionRequest_JoinAuctionBoardRequest)(nil),
		(*AuctionRequest_ChangeParticipantRoleRequest)(nil),
		(*AuctionRequest_FetchParticipantListRequest)(nil),
	}
	file_proto_command_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AuctionResponse_FetchPlayerInfoResponse)(nil),
		(*AuctionResponse_UpdatePlayerInfoResponse)(nil),
		(*AuctionResponse_CreateAuctionBoardResponse)(nil),
		(*AuctionResponse_UpdateAuctionBoardResponse)(nil),
		(*AuctionResponse_DeleteAuctionBoardResponse)(nil),
		(*AuctionResponse_FetchAuctionBoardResponse)(nil),
		(*AuctionResponse_JoinAuctionBoardResponse)(nil),
		(*AuctionResponse_ChangeParticipantRoleResponse)(nil),
		(*AuctionResponse_FetchParticipantListResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_command_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_command_proto_goTypes,
		DependencyIndexes: file_proto_command_proto_depIdxs,
		EnumInfos:         file_proto_command_proto_enumTypes,
		MessageInfos:      file_proto_command_proto_msgTypes,
	}.Build()
	File_proto_command_proto = out.File
	file_proto_command_proto_rawDesc = nil
	file_proto_command_proto_goTypes = nil
	file_proto_command_proto_depIdxs = nil
}
